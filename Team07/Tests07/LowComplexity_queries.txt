1 - Group 1 ( no clause) All Statements
stmt s;
Select s
1,10,11,12,13,14,15,16,17,18,19,2,20,21,22,23,3,4,5,6,7,8,9
5000
2 - all prog line
prog_line s;
Select s
1,10,11,12,13,14,15,16,17,18,19,2,20,21,22,23,3,4,5,6,7,8,9
5000
3 - All assign
assign a;
Select a
1,12,14,15,16,21,23,5,6,7,8,9
5000
4 - All Variable
variable v;
Select v
a,a1,a2,b,b1,bekkfirst,c,d,e,f,fiddy,five,negative,one,positive,two,x,y
5000
5 - All constant
constant c;
Select c
1,18,2,3,4,5,50
5000
6 - All procedure
procedure p;
Select p
haihai,second,third
5000
400 - Next*
stmt s,s2;
Select s such that Next*(s,s2)
1,10,11,12,13,14,15,16,17,18,19,2,21,3,4,5,6,7,8,9
5000
7 - All print
print p;
Select p
10,13,19,3
5000
8 - All call
call c;
Select c
20,22
5000
9 - All read
read r;
Select r
18,2
5000
10 - All while
while w;
Select w
11,17
5000
11 - All ifs
if ifs;
Select ifs
4
5000
12 - no clause - procName call
call c;
Select c.procName
second,third
5000
13 - no clause - procName proc
procedure p;
Select p.procName
haihai,third, second
5000
14 - no clause - stmt#
stmt s;
Select s.stmt#
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
15 - no clause - stmt# read
read re;
Select re.stmt#
18,2
5000
16 - no clause - stmt# call
call c;
Select c.stmt#
20,22
5000
17 - no clause - stmt# prog_linw
prog_line n;
Select n.stmt#
none
5000
18 - no clause - stmt# print
print c;
Select c.stmt#
10,13,19,3
5000
19 - no clause - stmt# assign
assign c;
Select c.stmt#
12,15,16,21,6,7,8,1,14,23,5,9
5000
20 - no clause - stmt# if
if c;
Select c.stmt#
4
5000
1001 - Follows double wildcard - boolean - group 2 single clause

Select BOOLEAN such that Follows(_,_)
TRUE
5000
1002 - Follows double wildcard - stmt
stmt s;
Select s such that Follows(_,_)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
1011 - Follows (syn, wildcard) - prog_line
prog_line n;
Select n such that Follows(n,_)
10,14,18,3,5,9,1,11,13,15,16,17,2,21,4,7
5000
1012 - Follows (syn, wildcard) - while
while w;
Select w.stmt# such that Follows(w,_)
11,17
5000
1013 - Follows (syn, wildcard) - read
read re1;
Select <re1, re1, re1> such that Follows(re1,_)
18 18 18,2 2 2
5000
1021 - Follows (wildcard, syn) - print
print p1;
Select p1 such that Follows(_,p1)
10,13,19,3
5000
1022 - Follows (wildcard, syn) - call
call c1;
Select c1.procName such that Follows(_,c1)
second,third
5000
1023 - Follows (wildcard, syn) - if
if ifs1, ifs2;
Select <ifs1, ifs2> such that Follows(_,ifs1)
4 4
5000
1031 - Follows (syn, syn) - assign-assign
assign a1,a2;
Select <a1.stmt#, a2> such that Follows(a1,a2)
14 15,15 16,5 6,7 8
5000
1032 - Follows (syn, syn) - assign-print
assign a; print p;
Select p such that Follows(a,p)
10
5000
1033 - Follows (syn, syn) - print-read
read re; print p;
Select re such that Follows(p,re)
none
5000
1034 - Follows (syn, syn) - while-prog_line
while w; prog_line n;
Select <n, w> such that Follows(w,n)
13 11,20 17
5000
1041 - Follows (const, wildcard)

Select BOOLEAN such that Follows(46,_)
FALSE
5000
1042 - Follows (const, wildcard) - print
print p;
Select p such that Follows(3,_)
10,13,19,3
5000
1051 - Follows (wildcard, const) - procedure
procedure p;
Select p.procName such that Follows(_,4)
haihai,third, second
5000
1052 - Follows (wildcard, const)
stmt s;
Select s.stmt# such that Follows(_,1)
none
5000
1061 - Follows (const, const)
prog_line n;
Select n such that Follows(4,5)
none
5000
1062 - Follows (const, const)

Select BOOLEAN such that Follows(17,20)
TRUE
5000
1071 - Follows (syn, const) - assign
assign a;
Select a such that Follows(a, 2)
1
5000
1072 - Follows (syn, const) - while
while w;
Select <w, w.stmt#> such that Follows(w, 13)
11 11
5000
1081 - Follows (const, syn) - assign
assign a;
Select BOOLEAN such that Follows(4, a)
TRUE
5000
1082 - Follows (const, syn) - while
while w;
Select <w, w.stmt#> such that Follows(10, w)
11 11
5000
1101 - Follows* double wildcard - boolean

Select BOOLEAN such that Follows*(_,_)
TRUE
5000
1102 - Follows* double wildcard - prog_line
prog_line n;
Select n such that Follows*(_,_)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
1111 - Follows* (syn, wildcard) - prog_line
prog_line n;
Select n such that Follows*(n,_)
10,14,18,3,5,9,1,11,13,15,16,17,2,21,4,7
5000
1112 - Follows* (syn, wildcard) - if
if ifs;
Select ifs.stmt# such that Follows*(ifs,_)
4
5000
1113 - Follows* (syn, wildcard) - read
read re1;
Select <re1, re1, re1> such that Follows*(re1,_)
18 18 18,2 2 2
5000
1121 - Follows* (wildcard, syn) - print
print p1;
Select p1 such that Follows*(_,p1)
10,13,19,3
5000
1122 - Follows* (wildcard, syn) - call
call c1;
Select c1.procName such that Follows*(_,c1)
second,third
5000
1123 - Follows* (wildcard, syn) - if
if ifs1, ifs2;
Select <ifs1, ifs2> such that Follows*(_,ifs1)
4 4
5000
1131 - Follows* (syn, syn) - while-while
while w1,w2;
Select <w1.stmt#, w2> such that Follows*(w1,w2)
11 17
5000
1132 - Follows* (syn, syn) - assign-call
assign a; call c;
Select a such that Follows*(a,c)
14,15,16,21,9,1
5000
1133 - Follows* (syn, syn) - read-print
read re; print p;
Select BOOLEAN such that Follows*(re,p)
TRUE
5000
1134 - Follows* (syn, syn) - stmt-call
stmt s; call c;
Select <s, c.procName> such that Follows*(s,c)
1 second, 2 second, 15 second, 10 second,11 second,13 second,14 second,16 second,17 second,21 third,3 second,4 second,9 second
5000
1135 - Follows* (syn, syn) - prog_line-stmt
stmt s; stmt n;
Select <s.stmt#, n.stmt#> such that Follows*(n, s)
13 11,14 11,14 13,15 1,15 2,2 1,22 21,8 7,10 1,10 2,10 3,10 4,10 9,11 1,11 10,11 2,11 3,11 4,11 9,13 1,13 10,13 2,13 3,13 4,13 9,14 1,14 10,14 2,14 3,14 4,14 9,15 10,15 11,15 13,15 14,15 3,15 4,15 9,16 1,16 10,16 11,16 13,16 14,16 15,16 2,16 3,16 4,16 9,17 1,17 10,17 11,17 13,17 14,17 15,17 16,17 2,17 3,17 4,17 9,19 18,20 1,20 10,20 11,20 13,20 14,20 15,20 16,20 17,20 2,20 3,20 4,20 9,3 1,3 2,4 1,4 2,4 3,6 5,9 1,9 2,9 3,9 4
5000
1141 - Follows* (const, wildcard)

Select BOOLEAN such that Follows*(46,_)
FALSE
5000
1142 - Follows* (const, wildcard) - read
read p;
Select p.stmt# such that Follows*(3,_)
18,2
5000
1151 - Follows* (wildcard, const) - procedure
procedure p;
Select p.procName such that Follows*(_,13)
haihai,third, second
5000
1152 - Follows* (wildcard, const)
while w;
Select w.stmt# such that Follows*(_,7)
none
5000
1161 - Follows* (const, const)
call n;
Select n.procName such that Follows*(2,20)
second,third
5000
1162 - Follows* (const, const)

Select BOOLEAN such that Follows*(50,52)
FALSE
5000
1171 - Follows* (syn, const) - print
print r;
Select r.stmt# such that Follows*(r, 11)
3,10
5000
1172 - Follows* (syn, const) - if
if ifs;
Select <ifs, ifs.stmt#> such that Follows*(ifs, 13)
4 4
5000
1181 - Follows* (const, syn) - assign
assign a;
Select a such that Follows*(11, a)
14,15,16
5000
1182 - Follows* (const, syn) - while
while w;
Select <w, w.stmt#> such that Follows*(2, w)
11 11,17 17
5000
1201 - Parent double wildcard - boolean

Select BOOLEAN such that Parent(_,_)
TRUE
5000
1202 - Parent double wildcard - assign
assign a;
Select a such that Parent(_,_)
12,15,16,21,6,7,8,1,14,23,5,9
5000
1211 - Parent (syn, wildcard) - prog_line
prog_line n;
Select n such that Parent(n,_)
11,17,4
5000
1212 - Parent (syn, wildcard) - while
while w;
Select w.stmt# such that Parent(w,_)
11,17
5000
1213 - Parent (syn, wildcard) - if
if ifs;
Select <ifs, ifs.stmt#> such that Parent(ifs,_)
4 4
5000
1214 - Parent (syn, wildcard) - assign
assign a;
Select a such that Parent(a,_)
none
5000
1221 - Parent (wildcard, syn) - print
print p1;
Select p1 such that Parent(_,p1)
19
5000
1222 - Parent (wildcard, syn) - while
while w;
Select w.stmt# such that Parent(_,w)
none
5000
1223 - Parent (wildcard, syn) - if
if ifs1, ifs2;
Select <ifs1, ifs2> such that Parent(_,ifs1)
none
5000
1224 - Parent (wildcard, syn) - call
call c;
Select c such that Parent(_,c)
none
5000
1231 - Parent (syn, syn) - if-while
if ifs; while w;
Select <ifs.stmt#, w> such that Parent(ifs,w)
none
5000
1232 - Parent (syn, syn) - while-if
if ifs; while w;
Select w such that Parent(w, ifs)
none
5000
1233 - Parent (syn, syn) - stmt-assign
stmt s; assign a;
Select <s, a> such that Parent(s,a)
11 12,4 5,4 6,4 7,4 8
5000
1234 - Parent (syn, syn) - prog_line-read
read r; prog_line n;
Select <r, n, r.stmt#> such that Parent(n,r)
18 17 18
5000
1241 - Parent (const, wildcard)

Select BOOLEAN such that Parent(1,_)
FALSE
5000
1242 - Parent (const, wildcard) - print
print p;
Select p such that Parent(20,_)
none
5000
1251 - Parent (wildcard, const) - procedure
procedure p;
Select p.procName such that Parent(_,46)
none
5000
1261 - Parent (const, const)
prog_line n;
Select n such that Parent(17,18)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
1262 - Parent (const, const)

Select BOOLEAN such that Parent(16,20)
FALSE
5000
1271 - Parent (syn, const) - while
while w;
Select w such that Parent(w, 3)
none
5000
1272 - Parent (syn, const) - if
if if;
Select <if, if.stmt#> such that Parent(if, 8)
4 4
5000
1281 - Parent (const, syn) - assign
assign a;
Select BOOLEAN such that Parent(3, a)
FALSE
5000
1282 - Parent (const, syn) - while
while w;
Select w such that Parent(3, w)
none
5000
1301 - Parent* double wildcard - boolean

Select BOOLEAN such that Parent*(_,_)
TRUE
5000
1302 - Parent* double wildcard - assign
assign a;
Select a such that Parent*(_,_)
1,12,14,15,16,21,23,5,6,7,8,9
5000
1311 - Parent* (syn, wildcard) - prog_line
prog_line n;
Select n such that Parent*(n,_)
11,17,4
5000
1312 - Parent* (syn, wildcard) - while
while w;
Select w.stmt# such that Parent*(w,_)
11,17
5000
1313 - Parent* (syn, wildcard) - if
if ifs;
Select <ifs, ifs.stmt#> such that Parent*(ifs,_)
4 4
5000
1314 - Parent* (syn, wildcard) - assign
assign a;
Select a such that Parent*(a,_)
none
5000
1321 - Parent* (wildcard, syn) - print
print p1;
Select p1 such that Parent*(_,p1)
19
5000
1322 - Parent* (wildcard, syn) - while
while w;
Select w.stmt# such that Parent*(_,w)
none
5000
1323 - Parent* (wildcard, syn) - if
if ifs1, ifs2;
Select <ifs1, ifs2> such that Parent*(_,ifs1)
none
5000
1324 - Parent* (wildcard, syn) - call
call c;
Select c such that Parent*(_,c)
none
5000
1331 - Parent* (syn, syn) - if-while
if ifs; while w;
Select <ifs.stmt#, w> such that Parent*(ifs,w)
none
5000
1332 - Parent* (syn, syn) - while-if
if ifs; while w;
Select w such that Parent*(w, ifs)
none
5000
1333 - Parent* (syn, syn) - stmt-read
stmt s; read r;
Select <r,s> such that Parent*(s,r)
18 17
5000
1334 - Parent* (syn, syn) - prog_line-print
print pr; prog_line n;
Select <n,pr, pr.stmt#> such that Parent*(n,pr)
17 19 19
5000
1341 - Parent* (const, wildcard)

Select BOOLEAN such that Parent*(1,_)
FALSE
5000
1351 - Parent* (wildcard, const) - procedure
procedure p;
Select p.procName such that Parent*(_,5)
haihai,second,third
5000
1361 - Parent* (const, const)
prog_line n;
Select n such that Parent*(11,12)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
1362 - Parent* (const, const)

Select BOOLEAN such that Parent*(16,20)
FALSE
5000
1371 - Parent* (syn, const) - while
while w;
Select w such that Parent*(w, 12)
11
5000
1381 - Parent* (const, syn) - assign
assign a;
Select BOOLEAN such that Parent*(3, a)
FALSE
5000
1382 - Parent* (const, syn) - while
while w;
Select w such that Parent*(4, w)
none
5000
1401 - Next (wildcard, wildcard)
stmt s;
Select s such that Next(_,_)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
1402 - Next (wildcard, wildcard)

Select BOOLEAN such that Next(_,_)
TRUE
5000
1411 - Next (syn, wildcard) - prog_line
prog_line n;
Select n such that Next(n,_)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21
5000
1412 - Next (syn, wildcard) - while
while w;
Select w.stmt# such that Next(w,_)
11,17
5000
1413 - Next (syn, wildcard) - read
read re1;
Select <re1, re1, re1> such that Next(re1,_)
18 18 18 , 2 2 2
5000
1421 - Next (wildcard, syn) - print
print p1;
Select p1 such that Next(_,p1)
10,13,19,3
5000
1422 - Next (wildcard, syn) - call
call c1;
Select c1.procName such that Next(_,c1)
second,third
5000
1423 - Next (wildcard, syn) - if-if
if ifs1, ifs2;
Select <ifs1, ifs2> such that Next(_,ifs1)
4 4
5000
1431 - Next (syn, syn) - assign-read
assign a1; read re1;
Select <a1.stmt#, re1> such that Next(re1,a1)
none
5000
1432 - Next (syn, syn) - assign-if
assign a1; if if1;
Select <a1.stmt#, if1> such that Next(if1,a1)
5 4, 7 4
5000
1433 - Next (syn, syn) - while-if
while w1; if if1;
Select <w1.stmt#, if1> such that Next(w1,if1)
none
5000
1434 - Next (syn, syn) - prog_line-print
prog_line n1; print pr1;
Select n1 such that Next(n1,pr1)
18,9,11,2
5000
1441 - Next (const, wildcard)

Select BOOLEAN such that Next(27,_)
FALSE
5000
1442 - Next (const, wildcard) - read
read re1;
Select BOOLEAN such that Next(1,_)
TRUE
5000
1451 - Next (wildcard, const)
stmt s;
Select s.stmt# such that Next(_,1)
none
5000
1453 - Next (wildcard, const) - call
call call1;
Select call1 such that Next(_,2)
20,22
5000
1461 - Next(const, const)

Select BOOLEAN such that Next(2,3)
TRUE
5000
1463 - Next(const, const) - while
while w1;
Select w1 such that Next(20,21)
none
5000
1471 - Next(syn, const) - read
read re1;
Select re1 such that Next(re1,19)
18
5000=
1473 - Next(const, syn) - prog_line
prog_line pl1;
Select pl1 such that Next(15,pl1)
16
5000
1474 - Next(const, syn) - assign
assign a1;
Select a1 such that Next(15,a1)
16
5000
1501 - Next*(wildcard,wildcard)
stmt s;
Select s such that Next*(_,_)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
1502 - Next*(wildcard,wildcard)

Select BOOLEAN such that Next*(_,_)
TRUE
5000
1511 - Next* (syn, wildcard) - prog_line
prog_line n;
Select n such that Next*(n,_)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21
5000
1512 - Next* (syn, wildcard) - while
while w;
Select w.stmt# such that Next*(w,_)
11,17
5000
1513 - Next* (syn, wildcard) - read
read re1;
Select <re1, re1, re1> such that Next*(re1,_)
18 18 18, 2 2 2
5000
1521 - Next* (wildcard, syn) - print
print p1;
Select p1 such that Next*(_,p1)
10,13,19,3
5000
1522 - Next* (wildcard, syn) - call
call c1;
Select c1.procName such that Next*(_,c1)
second,third
5000
1523 - Next* (wildcard, syn) - if-if
if ifs1, ifs2;
Select <ifs1, ifs2> such that Next*(_,ifs1)
4 4
5000
1532 - Next* (syn, syn) - while-if
while w1; if if1;
Select <w1, if1> such that Next*(w1,if1)
none
5000
1533 - Next* (syn, syn) - prog_line-print
prog_line n1; print pr1;
Select n1 such that Next*(n1,pr1)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
5000
1534 - Next* (syn, syn) - while-call
while w1; call call1;
Select <w1.stmt#, call1> such that Next*(w1,call1)
11 20,17 20
5000
1541 - Next* (const, wildcard)

Select BOOLEAN such that Next*(20,_)
FALSE
5000
1542 - Next* (const, wildcard) - read
read re1;
Select re1 such that Next*(20,_)
none
5000
12222 - Next* (const, wildcard) - read
stmt s;
Select s such that Next*(19,s)
17,18,19,20
5000
1551 - Next* (wildcard, const)
stmt s;
Select s.stmt# such that Next*(_,1)
none
5000
1552 - Next* (wildcard, const) - print
print pr1;
Select pr1 such that Next*(_,35)
none
5000
1553 - Next* (wildcard, const) - call
call call1;
Select call1 such that Next*(_,20)
20,22
5000
1561 - Next*(const, const)

Select BOOLEAN such that Next*(2,23)
FALSE
5000
1562 - Next*(const, const) - if
if if1;
Select if1 such that Next*(42,39)
none
5000
1563 - Next*(const, const) - while
while w1;
Select w1 such that Next*(62,65)
none
5000
1571 - Next*(syn, const) - read
read re1;
Select BOOLEAN such that Next*(re1,20)
TRUE
5000
1573 - Next*(const, syn) - prog_line
prog_line pl1;
Select pl1 such that Next*(20,pl1)
none
5000
1574 - Next*(const, syn) - assign
assign a1;
Select a1 such that Next*(15,a1)
16
5000
1601 - Affects - Minimal queries -> more testing in Affects_queries
assign a1,a2;
Select <a1,a2> such that Affects(a1,a2)
6 12
5000
1602 - Affects
read r; print pr; assign a1; stmt s1;
Select BOOLEAN such that Affects(2,11)
FALSE
5000
1604 - Affects
read r; print pr; assign a1; stmt s1;
Select a1 such that Affects(a1,_)
6
5000
1701 - Affects* - Minimal queries -> more testing in Affects_queries
assign a1,a2;
Select <a1,a2> such that Affects*(a1,a2)
6 12
5000
1704 - Affects*
stmt s1; while w1; assign a1, a2; variable v1;
Select a1 such that Affects*(a2,a1)
12
5000
1705 - Affects*
stmt s1; while w1; assign a1, a2; variable v1;
Select a1 such that Affects*(a1,a2)
6
5000
1706 - Affects*
stmt s1; while w1; assign a1, a2; variable v1;
Select a1 such that Affects*(s1,a2)
1,12,14,15,16,21,23,5,6,7,8,9
5000
1707 - Affects*
stmt s1; while w1; assign a1, a2; variable v1;
Select a1 such that Affects*(s1,_)
1,12,14,15,16,21,23,5,6,7,8,9
5000
1708 - Affects*
read r; print pr; assign a1; stmt s1;
Select a1 such that Affects*(a1,_)
6
5000
1801 - Uses(syn, wildcard) - stmt
stmt s1;
Select s1 such that Uses(s1,_)
13,8,1,10,11,12,15,16,17,19,3,4,5,7
5000
1802 - Uses(syn, wildcard) - if
if if1;
Select if1.stmt# such that Uses(if1,_)
4
5000
1811 - Uses(syn, var) - print-var
print pr1; variable var1;
Select pr1 such that Uses(pr1,var1)
10,13,19,3
5000
1812 - Uses(syn, var) - assign-var
assign a1; variable var1;
Select BOOLEAN such that Uses(a1,var1)
TRUE
5000
1813 - Uses(syn, var) - proc-var
procedure p1; variable var1;
Select p1 such that Uses(p1,var1)
haihai
5000
1823 - Uses(syn, var_name) - while-var_name
while w1;
Select w1 such that Uses(w1,"b1")
11
5000
1825 - Uses(syn, var_name) - call-var_name
call c;
Select c such that Uses(c,"i")
none
5000
1831 - Uses(const, wildcard) - const-wildcard

Select BOOLEAN such that Uses(4,_)
TRUE
5000
1832 - Uses(const, wildcard) - const-wildcard
call c1;
Select c1.stmt# such that Uses(9,_)
none
5000
1841 - Uses(const, var) - const-var
variable var1;
Select var1 such that Uses(11,var1)
fiddy,b1
5000
1842 - Uses(const, var) - const-var
variable var1;
Select var1 such that Uses(15,var1)
negative
5000
1851 - Uses(const,var_name) - const-var_name

Select BOOLEAN such that Uses(21,"a")
FALSE
5000
1852 - Uses(const,var_name) - const-var_name

Select BOOLEAN such that Uses(11,"fiddy")
TRUE
5000
1901 - Modifies(syn, wildcard) - prog_line
prog_line pl1;
Select pl1 such that Modifies(pl1,_)
12,20,7,1,11,14,15,16,17,18,2,21,22,23,4,5,6,8,9
5000
1902 - Modifies(syn, wildcard) - while
while w1;
Select w1.stmt# such that Modifies(w1,_)
11,17
5000
1903 - Modifies(syn, wildcard) - read
read re1;
Select re1 such that Modifies(re1,_)
18,2
5000
1911 - Modifies(syn, var) - read-var
read re1; variable var1;
Select re1 such that Modifies(re1,var1)
18,2
5000
1912 - Modifies(syn, var) - assign-var
assign a1; variable var1;
Select BOOLEAN such that Modifies(a1,var1)
TRUE
5000
1913 - Modifies(syn, var) - proc-var
procedure p1; variable var1;
Select p1 such that Modifies(p1,var1)
haihai,third, second
5000
1914 - Modifies(syn, var) - prog_line-var
prog_line pl1; variable var1;
Select pl1 such that Modifies(pl1,var1)
12,20,7,1,11,14,15,16,17,18,2,21,22,23,4,5,6,8,9
5000
1921 - Modifies(syn, var_name) - prog_line#-var_name
stmt pl1; variable var1;
Select pl1.stmt# such that Modifies(pl1,"fiddy")
none
5000
1922 - Modifies(syn, var_name) - read-var_name
read re1;
Select re1 such that Modifies(re1,"c")
2
5000
1923 - Modifies(syn, var_name) - call-var_name
call c1; variable v;
Select v such that Modifies(c1,v)
a,b
5000
1931 - Modifies(const, wildcard) - const-wildcard

Select BOOLEAN such that Modifies(5,_)
TRUE
5000
1932 - Modifies(const, wildcard) - const-wildcard
if if1;
Select if1 such that Modifies(24,_)
none
5000
1941 - Modifies(const, var) - const-var
variable var1;
Select var1 such that Modifies(18,var1)
one
5000
1942 - Modifies(const, var) - const-var
variable var1;
Select var1 such that Modifies(23,var1)
b
5000
1951 - Modifies(const, var_name) - const-var_name

Select BOOLEAN such that Modifies(23,"b")
TRUE
5000
1952 - Modifies(const, var_name) - const-var_name

Select BOOLEAN such that Modifies(21,"a")
TRUE
5000
1971 - Calls - Minimal Queries -> more in call_queries
call c;
Select c such that Calls(_,_)
20,22
5000
1972 - Calls
call c; procedure p;
Select p such that Calls(p,_)
haihai,second
5000
1973 - Calls
call c; procedure p;
Select p such that Calls(_,p)
second,third
5000
1981 - Calls* Minimal Queries -> more in call_queries
procedure p1,p2;
Select <p1,p2.procName> such that Calls*(p1,p2)
haihai second,haihai third,second third
5000
2001 - Pattern assign - wildcard wildcard
assign a;
Select a pattern a(_,_)
12,15,16,21,6,7,8,1,14,23,5,9
5000
2011 - Pattern assign - wildcard fullExpr
assign a;
Select a pattern a(_,"1+2")
21
5000
2012 - Pattern assign - wildcard fullExpr
assign a;
Select a.stmt# pattern a(_,_"negative"_)
15
5000
2013 - Pattern assign - wildcard fullExpr
assign a;
Select BOOLEAN pattern a(_,"(999+a+b)")
FALSE
5000
2021 - Pattern assign - wildcard subExpr
assign a;
Select a.stmt# pattern a(_,_"f-4"_)
7,8
5000
2022 - Pattern assign - wildcard subExpr
assign a;
Select <a,a> pattern a(_,_"(f-4)"_)
7 7, 8 8
5000
20222 - Pattern assign - wildcard subExpr
assign a;
Select <a,a> pattern a(_,"(((f-4)))")
7 7,8 8
5000
20223 - Pattern assign - wildcard subExpr
assign a;
Select <a,a> pattern a(_,"((f-4)))")
none
5000
2023 - Pattern assign - wildcard subExpr
assign a;
Select <a,a> pattern a(_,_"j/k"_)
none
5000
2031 - Pattern assign - ident wildcard
assign a;
Select a.stmt# pattern a("a1",_)
12
5000
2041 - Pattern assign - ident fullExpr
assign a;
Select a.stmt# pattern a("e","f-4")
7,8
5000
2051 - Pattern assign - ident subExpr
assign a;
Select a pattern a("e", _"f"_)
7,8
5000
2052 - Pattern assign - ident subExpr
assign a;
Select a pattern a("h", _"i/j"_)
none
5000
2061 - Pattern assign - syn wildcard
assign a; variable v;
Select <a, v.varName> pattern a(v,_)
1 a,12 a1,14 a2,15 x,16 y,21 a,23 b,5 b,6 b1,7 e,8 e,9 c
5000
2071 - Pattern assign - syn fullExpr
assign a; variable v;
Select <a.stmt#,v> pattern a(v,"f-4")
7 e, 8 e
5000
2072 - Pattern assign - syn fullExpr
assign a; variable v;
Select v pattern a(v, "positive % 5")
y
5000
2081 - Pattern assign - syn subExpr
assign a; variable v;
Select a.stmt# pattern a(v, _"1+2"_)
21
5000
2101 - Pattern if - wildcard
if ifs;
Select ifs.stmt# pattern ifs(_,_,_)
4
5000
2111 - Pattern if - ident
if ifs;
Select ifs pattern ifs("b",_,_)
4
5000
2121 - Pattern if - syn
if ifs; variable v;
Select <v,ifs> pattern ifs(v,_,_)
a 4,b 4
5000
2131 - Pattern while - wildcard
while w;
Select w.stmt# pattern w(_,_)
11,17
5000
2142 - Pattern while - ident
while w;
Select w.stmt# pattern w("five",_)
17
5000
2151 - Pattern while - syn
while w; variable v;
Select v pattern w(v,_)
fiddy,five
5000
2201 - with-stmt#
stmt s1;
Select s1 with s1.stmt# = 3
3
5000
2202 - with-procName
procedure p1;
Select p1 with p1.procName = "second"
second
5000
2203 - with-value
stmt s1; constant c1;
Select s1 with s1.stmt# = c1.value
1, 2, 3, 4, 5, 18
5000
2204 - with-and
stmt s1; prog_line pl1;
Select s1 with s1.stmt# = pl1 and pl1 = 10
10
5000
1 - Group 1 follows
stmt s;
Select s such that Follows(s,_)
1,2,3,4,5,7,9,10,11,13,14,15,16,18,17,21
5000
2 - follows
read re; stmt s;
Select re such that Follows(re,s)
2, 18
5000
3 - follows
stmt s;
Select s such that Follows(s,8)
7
5000
4 - follow*
stmt followed;
Select followed such that Follows*(followed,2)
1
5000
5 - follow*
stmt followers;
Select followers such that Follows*(13,followers)
14,15,16,17,20
5000
6 - follow*
stmt followers;
Select followers such that Follows*(_,followers)
2,3,4,6,8,9,10,11,13,14,15,16,17,19,20,22
5000
7 - parent
stmt p;
Select p such that Parent(p,_)
4,11,17
5000
8 - parent
stmt c;
Select c such that Parent(_,c)
5,6,7,8,12,18,19
5000
9 - parent
stmt c;
Select c such that Parent(17,c)
18,19
5000
10 - parent*
stmt p ,c ;
Select p such that Parent*(p,c)
4,11,17
5000
11 - parent*
stmt p ,c ;
Select c such that Parent*(p,c)
5,6,7,8,12,18,19
5000
12 - parent*
stmt c;
Select c such that Parent*(4,c)
5,6,7,8
5000
13 - modifies
stmt s; variable v;
Select s such that Modifies(s, v)
1,2,4,5,6,7,8,9,11,12,14,15,16,17,18,20,21,22,23
5000
14 - modifies
procedure p;
Select p such that Modifies(p, _)
haihai,second,third
5000
15 - modifies
assign a, a1;
Select a such that Modifies(a1, "a1")
1,5,6,7,8,9,12,14,15,16,21,23
5000
16 - uses
procedure p;
Select p such that Uses(p, _)
haihai
5000
17 - uses
if ifs; variable v;
Select v such that Uses(ifs, v)
a,b,d,f
5000
18 - uses
procedure p;
Select p such that Uses(p,"five")
haihai
5000
19 - next
stmt s;
Select s such that Next(3, s)
4
5000
20 - next
if ifs; stmt s;
Select s such that Next(ifs, s)
5,7
5000
21 - next
while while; stmt s;
Select while such that Next(while, s)
11,17
5000
22 - next*
stmt s;
Select BOOLEAN such that Next*(11,11)
TRUE
5000
23 - next*
assign a1;
Select a1 such that Next*(a1,a1)
12
5000
24 - next*
stmt s;
Select s such that Next*(4, s)
5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20
5000
25 - call
procedure p1, p2;
Select p1 such that Calls(p1,p2)
haihai,second
5000
26 - call
procedure p1, p2;
Select p1 such that Calls(p1,"third")
second
5000
27 - call
procedure p2;
Select p2 such that Calls("second",p2)
third
5000
28 - call*
procedure p1, p2;
Select p1 such that Calls*(p1,"third")
haihai,second
5000
29 - call*
procedure p1, p2;
Select p1 such that Calls*("haihai",p1)
second,third
5000
30 - call*
procedure p1, p2;
Select p1 such that Calls*(_,p1)
second, third
5000
2301 - Group 2 - Multi clause - 2 + Independent Clauses + Constant Args

Select BOOLEAN such that Follows(17, 20) and Parent*(17,18)
TRUE
5000
2302 - Multi clause - 2 + Independent Clauses + Constant Args

Select BOOLEAN such that Follows*(19, 20) and Parent(17,19)
FALSE
5000
2303 - Group 3 - Multi clause - 2 + Independent Clauses + Syn/Constant Args
assign a1, a2;
Select <a1.stmt#, a2> such that Next(a1, a2) and Parent*(11,12)
14 15,15 16,5 6,6 9,7 8,8 9
5000
2305 - Multi clause - 2 + Independent Clauses + Syn/Constant Args
procedure p1,p2; call c;
Select <p2.procName, p1> such that Calls*(p1, p2) with c.procName = "second"
second haihai,third haihai,third second
5000
2306 - Multi clause - 2 + Independent Clauses + Syn Args
variable v; procedure p;
Select v such that Uses(p, v) with p.procName = "second"
none
5000
2307 - Multi clause - 2 + Independent Clauses + Syn Args
if ifs1, ifs2; variable v; while w;
Select ifs1 such that Modifies(ifs1, v) such that Next*(ifs2, w)
4
5000
2308 - Multi clause - 2 + Independent Clauses + Syn Args
variable v; procedure p; prog_line n1, n2;
Select p such that Modifies(p, v) and Parent*(n1, n2)
haihai,third, second
5000
2309 - Multi clause - 2 + Independent Clauses + Syn Args
if ifs1, ifs2; variable v; while w;
Select ifs1.stmt# such that Next(ifs2, while) and Modifies(ifs1, v)
none
5000
2401 - Multi clause - 2 + Common clauses + Syn/Constant Args
while w; prog_line n;
Select w such that Next*(w, 15) pattern w("fiddy", _)
11
5000
2411 - Multi clause - 2 + Common clauses + Syn Args
if ifs; while w;
Select <ifs, w> such that Parent(ifs, w) and Parent*(ifs,w)
none
5000
2412 - Multi clause - 2 + Common clauses + Syn Args
print pr; read r;
Select r such that Next(r, pr) with r.varName = "c"
2
5000
2413 - Multi clause - 2 + Common clauses + Syn Args
print pr; read r;
Select <pr.stmt#, pr.varName> such that Next*(r, pr) with r.stmt# = 2
3 c, 10 d,19 two,13 bekkfirst
5000
2414 - Multi clause - 2 + Common clauses + Syn Args
if ifs; while w; variable v;
Select <ifs, w> such that Parent(ifs, w) and Modifies(ifs,v)
none
5000
2416 - Multi clause - 2 + Common clauses + Syn Args
assign a; variable v;
Select a such that Uses(a, v) and Next*(a, a)
12
5000
2417 - Multi clause - 2 + Common clauses + Syn Args
assign a; assign a1;
Select a1 such that Next(a, a1) and Next*(a, a)
none
5000
2418 - Multi clause - 2 + Common clauses + Syn Args
stmt s1,s2; assign a;
Select s1.stmt# such that Follows*(s1,a) pattern a("c",_"2"_)
1,2,3,4
5000
2419 - Multi clause - 2 + Common clauses + Syn Args
call c; variable v; stmt s1;
Select s1.stmt# such that Modifies(c,v) and Modifies(s1, v)
1,20,21,22,23,4,5
5000
2501 - Multi clause - 3 + Independent Clauses + Constant args

Select BOOLEAN such that Follows*(1,20) and Modifies(20,"b") and Calls("haihai",_)
TRUE
5000
2502 - Multi clause - 3 + Independent Clauses + Constant args

Select BOOLEAN such that Follows*(1,19) and Next(19,20) such that Parent*(4,6)
FALSE
5000
2503 - Multi clause - 3 + Independent Clauses + Constant args

Select BOOLEAN such that Follows*(1,17) and Next(19,17) such that Parent*(4,6)
TRUE
5000
2511 - Multi clause - 3 + Independent Clauses + Mix args
assign a1,a2; if ifs;
Select <a1, ifs.stmt#> such that Next(4,a1) and Next(3,ifs) such that Parent*(11,a2)
5 4, 7 4
5000
2531 - Multi clause - 3 - Mix Clauses
assign a1; if ifs; procedure p;
Select <a1,ifs.stmt#> such that Affects(a1,_) and Calls(p,_) such that Parent(ifs,a1)
6 4
5000
2532 - Multi clause - 3 - Mix Clauses
assign a1; if ifs; procedure p;
Select <a1,ifs.stmt#> such that Affects*(a1,12) such that Parent(ifs,a1) pattern ifs("b",_,_)
6 4
5000
2533 - Multi clause - 3 - Mix Clauses
stmt s1,s2; while w;
Select s1.stmt# pattern w("u1",_) such that Parent(w,s1) with s2.stmt# = 5
none
5000
2601 - Multi clause - 3 + dependent Clauses + Constant args
stmt s1; while w1;
Select BOOLEAN such that Follows(1,w1) and Parent(w1,s1) and Next(w1,_)
FALSE
5000
2602 - Multi clause - 3 + dependent Clauses + Constant args
stmt s1; while w1;
Select w1 such that Follows(1,w1) and Follows*(w1,s1) pattern w1("fiddy",_)
none
5000
2605 - Multi clause - 3 + dependent Clauses + Constant args
stmt s1; while w1; assign a1, a2;
Select a1 such that Follows(19,a1) and Affects(6, a1) pattern a1("3",_)
none
5000
2606 - Multi clause - 3 + dependent Clauses + Constant args
stmt s1; while w1; assign a1, a2;
Select a1 such that Follows(5,a1) and Affects*(a1, a2) with a1.stmt# = 6
6
5000
2607 - Multi clause - 3 + dependent Clauses + Constant args
stmt s1; while w1; assign a1, a2;
Select a1 such that Affects(49,a1) and Affects*(a1, 59) with a1.stmt# = 50
none
5000
2900 - Multi clause - Many Mix Clauses
stmt s1; while w1; call c1;
Select w1.stmt# such that Follows(w1,c1) and Calls("haihai",_) and Modifies(c1,"a") pattern w1(_,_) such that Uses(w1,"two")
17
5000
2901 - test
stmt s1; while w1; call c1;
Select s1 such that Follows*(s1,_)
10,14,18,3,5,9,1,11,13,15,16,17,2,21,4,7
5000
2622 - Multi clause - 4 - dependent Clauses
read r; print pr; assign a1; stmt s1;
Select <r.stmt#,pr> such that Next*(r,a1) and Next(pr,r) and Affects(a1,_) and Follows*(pr,r)
none
5000
2632 - Multi clause - 4 + Mix Clauses + Constant args
stmt s1; while w1; call c1; procedure p1, p2; read re1;
Select p2 such that Next(re1,_) and Uses(p1,_) and Calls(p1,p2) with p1.procName = "haihai"
second
5000
2632 - Multi clause - 4 + Mix Clauses + Constant args
stmt s1; while w1; call c1; procedure p1, p2;
Select p2 such that Modifies(c1,"b") and Uses(p1,_) and Calls(p1,p2) with p1.procName = "haihai"
second
5000
2633 - Multi clause - 4 + Mix Clauses + Constant args
stmt s1; while w1; call c1; procedure p1, p2;
Select <p1,p2> such that Modifies(c1,"z") and Next(s1,56) and Calls*(p1,p2) and Calls(p1,_)
none
5000
2634 - Multi clause - 4 + Mix Clauses + Constant args
stmt s1; while w1; call c1; procedure p1, p2; if if1; assign a1;
Select BOOLEAN such that Follows*(if1,a1) and Next(a1,s1) and Calls*(p1,p2) and Calls(p1,_)
TRUE
5000
2635 - Multi clause - 4 + Mix Clauses + Constant args
stmt s1; while w1; call c1; procedure p1, p2; if if1; assign a1; variable var1;
Select BOOLEAN such that Next*(a1,s1) and Next(s1,if1) and Modifies(if1,var1) pattern if1(_,_,_)
TRUE
5000
2636 - Multi clause - 4 + Mix Clauses + Constant args
stmt s1; while w1; call c1; procedure p1, p2; if if1; assign a1; variable var1;
Select if1 such that Next*(a1,s1) and Next(s1,if1) pattern a1(_,_) pattern if1(_,_,_)
4
5000
2637 - Multi clause - 4 + Mix Clauses + Constant args
stmt s1; while w1; call c1; procedure p1, p2; if if1; assign a1; variable var1;
Select if1 such that Uses(a1,var1) and Next*(a1,if1) pattern if1(_,_,_) with if1.stmt# =4
4
5000
2638 - Multi clause - 4 + Mix Clauses + Constant args
stmt s1; while w1; call c1; procedure p1, p2; if if1; assign a1; variable var1;
Select <a1,p1> such that Modifies(a1,var1) and Calls(p1,p2) and Follows*(a1,_) with var1.varName = "a"
1 haihai,1 second, 21 haihai,21 second
5000
2640 - Multi clause - 4 + Mix Clauses + Constant args
stmt s1; while w1; call c1; procedure p1, p2; if if1; assign a1; variable var1;
Select p1 such that Calls(p1,p2) and Follows*(a1,if1) and Parent*(if1,_) pattern if1("a",_,_)
haihai,second
5000
2641 - Multi clause - 4 + Mix Clauses + Constant args
stmt s1; while w1; call c1; procedure p1, p2; if if1; assign a1, a2; variable var1;
Select a1 such that Follows(a1,a2) and Follows*(a1,w1) and Parent*(w1,_) pattern if1("b",_,_)
14,15
5000
2642 - Multi clause - 4 + Mix Clauses + Constant args
stmt s1; while w1; call c1; procedure p1, p2; if if1; assign a1, a2; variable var1;
Select a2 such that Follows*(a1,a2) and Follows*(a1,w1) and Next*(if1,_) and Parent(w1,if1)
none
5000
2643 - Multi clause - 4 + Mix Clauses + Constant args
stmt s1; while w1; call c1; procedure p1, p2; if if1; assign a1, a2; variable var1;
Select c1 such that Modifies(c1,"z") and Follows*(a1,w1) and Next*(if1,_) and Parent(w1,if1)
none
5000
2644 - Multi clause - 4 + Mix Clauses + Constant args
stmt s1; while w1; call c1; procedure p1, p2; if if1; assign a1, a2; variable var1;
Select BOOLEAN such that Affects*(a1,a2) and Parent*(w1,_) and Calls*(p1,_) with p1.procName = "haihai"
TRUE
5000
2645 - Multi clause - 4 + Mix Clauses + Constant args
stmt s1; while w1; call c1; procedure p1, p2; if if1; assign a1, a2; variable var1;
Select BOOLEAN such that Affects(a1,a2) and Next*(a1,39) and Parent(if1,_) and Parent*(w1,if1)
FALSE
5000
2651 - Multi clause - 4 - Independent Clauses
prog_line n; procedure p;
Select n such that Parent*(n, 19) and Uses(p, "a") and Affects*(6,12) and Modifies("haihai", "b1")
17
5000
2652 - Multi clause - 4 - Mix clauses
call c; if ifs; assign a1,a2;
Select a1.stmt# such that Parent*(ifs, a2) and Affects*(a1, 59) and Calls("first",_) with a2.stmt# = 57
none
5000
2652 - Multi clause - 5 - Mix clauses
call c; if ifs; assign a1,a2; while w;
Select a1.stmt# such that Parent*(ifs, a2) and Affects*(a1, _) and Follows*(w,c) with c.procName = "second" such that Uses("haihai", "a")
6
5000
31 - Group 2 3 clauses
variable v1, v2; stmt s; procedure p;
Select v1 such that Uses(s, v1) such that Uses(s, v2) such that Modifies(s, v1)
b
5000
32 - 3 clauses
variable v1, v2; procedure p;
Select v1 such that Uses(p, v1) such that Uses(p, v2) and Modifies(p, v1) with p.procName = "haihai"
b,b1,c,a
5000
33 - 3 clauses
stmt s1; assign a1; variable v1;
Select s1 such that Next(11, s1) and Parent(_, a1) and Follows(s1, _) pattern a1(v1, _)
13
5000
34 - 3 clauses
procedure p; prog_line p1; constant c;
Select c such that Modifies(p,_) and Calls*(_, p) and Parent*(4,p1)
1,2,3,4,5,18,50
5000
35 - 3 clauses
stmt s1; procedure p1; while w1; prog_line n1; variable v1; if ifs;
Select <n1, v1> such that Next(n1, s1) and Uses(n1, v1) with v1.varName = "c" such that Next(n1, ifs)
3 c
5000
36 - 3 clauses
stmt s; procedure p;
Select BOOLEAN such that Next*(1, s) and Uses(p,_) and Modifies(p,"a")
TRUE
5000
37 - 3 clauses
assign a; if if1;
Select a such that Modifies (a, "b1") and Parent* (if1, a) and Next* (1, a)
6
5000
38 - 3 clauses
procedure p; prog_line p1; variable v; stmt s;
Select p such that Uses(p,v) and Calls*(p, _) and Modifies(p, _) with v.varName = "f"
haihai
5000
39 - 3 clauses
stmt s1; assign a1; variable v1;
Select s1 such that Next*(4, s1) and Follows(_, a1) and Follows*(s1, _) pattern a1(v1, _)
5,7,9,10,11,13,14,15,16,17,18
5000
40 - 3 clauses
procedure p; prog_line p1; constant c;
Select BOOLEAN such that Modifies(p,_) and Calls(_, p)  and Parent*(4,p1)
TRUE
5000
87 - invalid uses clause cannot have first argument as '_'
procedure p1; stmt s1;
Select s1 such that Uses(_,_)
none
5000
88 - GROUP 4 - INVALID clauses invalid modifies clause cannot have first argument as '_'
procedure p1; stmt s1;
Select s1 such that Modifies(_,s1)
none
5000
89 - invalid duplicated synonyms
procedure p1, p1;
Select p1 such that Uses(p1, _)
none
5000
90 - invalid declaration of synonyms misspelled
proc p1;
Select p1 such that Uses(p1, _)
none
5000
91 - invalid variable declaration
procedure p1_;
Select p1_ such that Uses(p1_, _)
none
5000
92 - invalid pattern clause + wildcard
procedure p1; stmt s1, s2; assign a1;
Select a1 such that Parent(s1,s2) pattern a1(_, _"+"_)
none
5000
93 - invalid pattern clause
stmt s1, s2; assign a1;
Select a1 such that Follows(s1, s2) pattern a1(_, "*")
none
5000
94 - invalid and usage
procedure p1; stmt s1; assign a1;
Select a1 such that Parent*(s1, a1) and pattern a1(_, "y") such that Modifies(p1, "z")
none
5000
95 - invalid and usage 2
procedure p1; stmt s1; assign a1;
Select a1 such that Parent*(s1, a1) and Modifies(p1, "z") and such that Next*(4, a1)
none
5000
96 - invalid and usage 3
procedure p1; stmt s1, s2; assign a1;
Select a1 such that Follows*(s1, s2) pattern a1("y", _) and Modifies(p1, "x")
none
5000
97- invalid undeclared synonym
procedure p1; stmt s1;
Select s1 such that Uses(s2, _)
none
5000
98 - invalid non-existent variable name
procedure p1; stmt s1;
Select s1 such that Modifies(s1, "nananannananana")
none
5000
99 - invalid out of range stmt num
procedure p1; stmt s1;
Select s1 such that Uses(10000, "z")
none
5000
100 - invalid non-existent variable name + out of range stmt num
procedure p1; stmt s1;
Select s1 such that Uses(10000, "nanananna")
none
5000
101 - invalid modifies + undeclared synonym + pattern
procedure p1; stmt s1; if if1;
Select s1 such that Modifies(_, v1) pattern if1(_, _, _)
none
5000
102 - invalid number of arguments clause
procedure p1; stmt s1; variable v1, v2;
Select s1 such that Modifies(s1, v1, v2)
none
5000
103 - invalid pattern if
procedure p1; stmt s1; if if1, if2;
Select if1 pattern if1("u1", "sasa", _)
none
5000
104 - invalid pattern if
procedure p1; stmt s1; if if1, if2;
Select if1 pattern if1("u1", _, "sasa")
none
5000
105 - invalid pattern if
procedure p1; stmt s1; if if1, if2;
Select if1 pattern if1("10", "u1", "10")
none
5000
106 - invalid pattern if
procedure p1; stmt s1; if if1, if2;
Select if1 pattern if1("00000 0001", _, _)
none
5000
107 - invalid pattern if
procedure p1; stmt s1; if if1, if2;
Select if1 pattern if1(_, _, _, _)
none
5000
108 - invalid pattern if
procedure p1; stmt s1; if if1, if2;
Select if1 pattern if1(u1, _, _)
none
5000
109 - invalid pattern while
procedure p1; stmt s1; while w1, w2;
Select w1 pattern w1("u1", _, _)
none
5000
110 - invalid pattern while
procedure p1; stmt s1; while w1, w2;
Select w1 pattern w1("4     /u1+9%8+7%6", _)
none
5000
111 - invalid pattern while
procedure p1; stmt s1; while w1, w2;
Select w1 such that pattern w1("u1", _)
none
5000
112 - invalid pattern while
while w1;
Select BOOLEAN such that pattern w1("a", _)
none
5000
113 - invalid pattern while
while w1, w2;
Select BOOLEAN with pattern w1("u3", _)
none
5000
114 - invalid pattern assign
assign a1;
Select a1 pattern a1(_, "m6")
none
5000
115 - invalid pattern assign
assign a1;
Select a1 pattern a1("m6")
none
5000
116 - invalid pattern assign
assign a1;
Select a1 pattern a1(_, m6)
none
5000
117 - select boolean

Select BOOLEAN
TRUE
5000
117 - select boolean
stmt s;
Select BOOLEAN
TRUE
5000
118 - with more
stmt s; prog_line n;
Select s with s.stmt# = n and n = 10
10
5000
119 - no clause - invalid procName
read re;
Select re.procName
none
5000
120 - no clause - invalid procName stmt
stmt s;
Select s.procName
none
5000
121 - valid affects
stmt s1,s2;
Select s1 such that Affects(s1,s2)
6
5000
1000 - edge case
prog_line s1;
Select s1 such that Affects(6,s1)
12
5000
8001 - Syntax
assign a1;
assign a2; Select BOOLEAN
TRUE
5000
8002 - Syntax

assign a2; assign a1; Select BOOLEAN
TRUE
5000
8003 - Syntax - add to report
assign a1;
assign a1; Select BOOLEAN
none
5000
8004 - Syntax
variable Modifies; stmt Uses;
Select Uses such that Modifies(Uses,Modifies)
1,11,12,14,15,16,17,18,2,20,21,22,23,4,5,6,7,8,9
5000
8005 - Syntax
variable Modifies; stmt s1;
Select BOOLEAN with 1 = 1
TRUE
5000
8007 - Syntax
variable Modifies; stmt s1;
Select BOOLEAN with 1 = "1"
none
5000
8008 - Syntax -add to report
variable Modifies; stmt s1;
Select BOOLEAN with 1 = "a"
none
5000
8009 - Syntax
stmt BOOLEAN;
Select BOOLEAN such that Follows(1,2)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
8010 - Syntax
assign BOOLEAN;
Select BOOLEAN such that Follows(1,2)
1,12,14,15,16,21,23,5,6,7,8,9
5000
8011 - Syntax
assign pattern; variable Select;
Select Select pattern pattern(Select, _)
a,b,a1,a2,b1,e,x,y,c
5000
8012 - Syntax
assign a; variable v;
Select a pattern a(v, _"f                -   4"_) with v.varName = "e"
7,8
5000
9001 - Follows - between procedures
stmt s1,s2;
Select BOOLEAN such that Follows(46,47)
FALSE
5000
9201 - Follows
stmt s1,s2; constant c;
Select BOOLEAN such that Follows(s1,c)
none
5000
9202 - Follows
stmt s1,s2; constant c;
Select BOOLEAN such that Follows(s1,c.value)
none
5000
9002 - Follows* - between procedures
stmt s1,s2;
Select BOOLEAN such that Follows*(46,47)
FALSE
5000
9003 - Calls* - between procedures
procedure p;
Select p such that Calls*(p,p)
none
5000
9004 - Calls* - between procedures
procedure p;
Select p such that Calls(p,q) and Calls*(q,p)
none
5000
9005 - Pattern AST invalidated
assign a;
Select a pattern a("h", _"j/k"_)
none
5000
9106 - Pattern invalid expr
assign a;
Select a pattern a(_, " ")
none
5000
9107 - Pattern invalid expr
assign a;
Select a pattern a(_,_" "_)
none
5000
9008 - Affects for stmt num exceeding total stmt nums of program
stmt s;
Select s such that Affects*(300,500)
none
5000
9009 - Affects for stmt num exceeding total stmt nums of program
stmt s;
Select s such that Next*(300,500)
none
5000
9010 - Affects for stmt num exceeding total stmt nums of program
stmt s;
Select s such that Follows*(300,500)
none
5000
9011 - prog_line
prog_line n;
Select n.stmt#
none
5000
9012 - procName   - add to report
procedure p;
Select p    .   procName
none
5000
9012 - procName
procedure p;
Select p.procName
haihai,third, second
5000
9100 - follows
stmt s;
Select s such that Follows(s,s)
none
5000
9101 - follows*
stmt s;
Select BOOLEAN such that Follows*(s,s)
FALSE
5000
9102 - Affects
stmt s;
Select BOOLEAN such that Affects(s,s)
FALSE
5000
9103 - Affects*
stmt s;
Select BOOLEAN such that Affects*(s,s)
FALSE
5000
9104 - Parent*
stmt s;
Select BOOLEAN such that Parent*(s,s)
FALSE
5000
9104 - Parent
stmt s;
Select BOOLEAN such that Parent(s,s)
FALSE
5000
9105 - Next
stmt s;
Select BOOLEAN such that Next(s,s)
FALSE
5000
9106 - Next*
stmt s;
Select BOOLEAN such that Next*(s,s)
TRUE
5000
9107 - Calls
stmt s; procedure p;
Select BOOLEAN such that Calls(p,p)
FALSE
5000
9108 - Calls*
stmt s; procedure p;
Select BOOLEAN such that Calls*(p,p)
FALSE
5000
9109 - Pattern
stmt s; assign a;
Select BOOLEAN pattern a(_,"(((((f-4)))))")
TRUE
5000
9110 - Pattern
stmt s; assign a;
Select BOOLEAN pattern a(_,_""_)
none
5000